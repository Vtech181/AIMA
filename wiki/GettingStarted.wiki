#labels Featured
#Getting started using the AIMA-Java projects.

= Setting up your workspace =
The latest release can be downloaded as a single compressed .zip file, from the project's download page: 
  * http://code.google.com/p/aima-java/downloads/list
  
Alternatively you can check out from the project's Subversion repository directly. For this you will require a Subversion client, see the following for useful instructions:
  * http://code.google.com/p/aima-java/source/checkout
  * http://subversion.apache.org/packages.html
  
Once you've setup your workspace, the directory structure should be organized in the following manner:
{{{
<your-workspace-directory>/
    aima-core/
    aima-gui/
    aimax-osm/
}}}

*Note:* There is also an _aima-all_ project but you may ignore this as it is intended to only be used by the project's developers for creating releases and Java Web Start applications.

The _aima-core_ project is the baseline project that contains all the current implementations for the algorithms described in AIMA3e. It only depends on having a <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Java Development Kit(JDK) 1.6</a> installed locally, if you want to edit/compile the provided Java files (.jar files including compiled .class files are provided with the releases). For testing, the _aima-core_ project is also dependent on <a href="http://www.junit.org/">JUnit</a> for running its test suite (the required library .jar file is included in the project's /lib directory). The _aima-gui_ project depends on _aima-core_ and contains example GUI and command line demonstrations of the algorithms defined in _aima-core_. The _aimax-osm_ project is an extension project that demonstrates how the core algorithms can be used to create Navigation Applications using map data provided by the <a href="http://www.openstreetmap.org/">Open Street Maps</a> project.

The following instructions detail how to work with the provided projects via the command line using the <a href="http://ant.apache.org/">Ant</a> build system or by using the <a href="http://www.eclipse.org/">Eclipse IDE</a>. Once you have everything setup correctly, example programs can be found in:<br>
  * aima-gui/src/main/java/aima/gui/applications/
  * aima-gui/src/main/java/aima/gui/demo (for command line demos)
  * aimax-osm/src/main/java/aimax/osm/applications

== Using the Command Line and <a href="http://ant.apache.org/">Ant</a> ==
  * Ensure you have Ant installed on your system, see : http://ant.apache.org/ 
  * Ensure your environment is set up correctly to see the Ant and JDK installations on your machine. This can be done on Windows by setting up an appropriate .bat file, for example: 
{{{
set ANT_HOME=C:\Temp\AIMA\apache-ant-1.8.2
set ANT_OPTS=-Xmx1024m
set JAVA_HOME=C:\Program Files\Java\jdk1.6.0_20\
set PATH=C:\Temp\AIMA\apache-ant-1.8.2\bin;C:\Program Files\Java\jdk1.6.0_20\bin;%PATH%
}}} 
*Note:* you need to ensure your JDK and Ant bin directories are visible on your OS's path environment variable in order to be able to correctly run the.
  * Change directory into the the sub-project of interest, for example: <br> aima-core/ <br> and then type ant at the command line: <br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/ant_build.png <br>
  * For further details on how to use Ant see the project's online documentation: http://ant.apache.org/manual/index.html <br>

== Using the <a href="http://www.eclipse.org/">Eclipse IDE</a> ==
*Note:* You do not need to use the provided <a href="http://ant.apache.org/">Ant</a> build.xml files if you are using the Eclipse IDE.

=== Importing a downloaded release ===
You can import the AIMA-Java projects into your workspace as follows:
  # Select the menu item 'File->Import...'<br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_file_import.png
  # In the Import 'Select' dialog, select 'General->Existing Projects into Workspace':<br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_import_existing.png
  # Hit the 'Next >' button.
  # In the Import 'Import Projects' select the 'Select archive file:' radio button and 'Browse...' to the .zip release file you previously downloaed from the project's website :<br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_import_projects.png <br> The three projects, _aima-core_, _aima-gui_, and _aimax-osm_ should be listed and be automatically selected.
  # Hit the 'Finish' button.
 
=== Using the Subversion repository directly ===
*Note:* The <a href="http://subclipse.tigris.org/">Subclipse</a> Subversion client is a useful plugin for the Eclipse IDE. Refer to http://subclipse.tigris.org/ for details on how to setup your Eclipse IDE to use the plugin. The following instructions detail how to download the AIMA-Java project using this plugin. 

  # Select the menu item 'File->New->Other':<br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_new_other.png
  # In the New 'Select a wizard' dialog, select 'SVN->Checkout Projects from SVN':<br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_new_other_svn.png
  # Hit the 'Next >' button.
  # If this is your first time accessing the AIMA-Java Subversion repository you will want to select 'Create a new repository location' and hit the 'Next >' button otherwise just enter in the pre-existing location from the list provided.
    # In the 'Select/Create Location' dialog, enter the following location:<br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_svn_create_location.png <br> and then hit the 'Next >' button to complete setting up the location.  
  # In the 'Select Folder' dialog, select the project you wish to download to your local workspace, starting with _aima-core_, for e.g.:<br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_select_new_project.png
  # You may now hit the 'Finish' button and the project should be downloaded to your local Eclipse workspace.

*WARNING* If you have multiple Subversion clients installed locally, do not mix and match their usage within a single workspace, as it can often corrupt your local workspace due to incompatible local meta-data usage between the different clients. 

Once you've setup the AIMA-Java projects in your Eclipse workspace, it should look something like this:<br>
http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_setup.png

=== Some useful Eclipse tips ===
  * Useful Eclipse views for development can be displayed inside of your Eclipse IDE by selecting the menu item 'Window->Show View' and selecting those of interest:<br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_views.png <br> Some useful ones to select are:
    # Console (Window->Show View->Console).
    # Search (Window->Show View->Search).
    # Type Hierarchy (Window->Show View->Type Hierarchy).
    # JUnit (Window->Show View->Other...->Java->JUnit).
    # Ant (Window->Show View->Ant).
    # SVN Repositories (Assuming Subclipse installed, Window->Show View->Other...->SVN->SVN Repositories).
      # History (Window->Show View->Other...->Team->History). 
  * If you wish to find out where a particular algorithm is used, e.g. BreadthFirstSearch, open up the corresponding .java file in the Eclipse editor, select the class name and then open the context sensitive menu (right click on Windows) and select the menu item 'References->Workspace': <br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_references_workspace.png <br>
  * Running a JUnit test from within Eclipse can be done by selecting a test of interest, for e.g.:<br> aima-core/src/test/java/aima/test/core/unit/AllAIMAUnitTestSuite.java<br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_run_junit.png <br> A similar approach can be used for running  Java Applications (i.e. the .java file has a 'public static void main(String[] args) {' method in it). These are found in the _aima-gui_ and _aimax-osm_ projects. Example:<br> aima-gui/src/main/java/aima/gui/AimaDemoApp<br>
  * Ensure you've a JDK installed and selected within Eclipse. This option can be found by selecting the menu item 'Window->Preferences' and then from within the 'Preferences' dialog selecting 'Java->Installed JREs' and ensure a JDK is listed and selected: <br> http://aima-java.googlecode.com/svn/trunk/aima-all/release/wiki/eclipse_installed_jre.png